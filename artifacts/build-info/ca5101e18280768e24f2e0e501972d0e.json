{
  "id": "ca5101e18280768e24f2e0e501972d0e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.12",
  "solcLongVersion": "0.8.12+commit.f00d7308",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/interfaces/IStakeRouter.sol": {
        "content": "pragma solidity  >=0.8.0 <0.9.0;\n// SPDX-License-Identifier: BSU-1.1\n\n/** @notice : interface to stake any erc20 token in datapools\n */\ninterface IStakeRouter  {\n\n/********* ETH ************/\n\n struct TradeInfo {\n        address[5] meta; //[source, dtAddress, to, refAddress, adapterAddress]\n        uint256[3] uints; //[dtAmountOut/minDTAmountOut/tokenAmountOut/minTokenAmountOut, refFees, dtAmountIn/maxDTAmountIn/tokenAmountIn/maxTokenAmountIn]\n        address[] path;\n        bool isFRE;\n        bytes32 exchangeId;\n    }\n\n    /** @dev stakes ETH (native token) into datapool\n     */\n    function stakeETHInPool(TradeInfo calldata info) external payable  returns (uint256 poolAmountOut);\n\n    /** @dev unstakes staked pool tokens into ETH from datapool\n     */\n    function unstakeToETHFromPool(TradeInfo calldata info) external returns (uint256 amountOut);\n\n    /********* ERC20 ************/\n\n   /** @dev stakes given Erc20 token into datapool\n     */\n    function stakeTokenInPool(TradeInfo calldata info) external payable  returns (uint256 poolAmountOut);\n\n    /** @dev unstakes staked pool tokens into given Erc20 from datapool\n     */\n    function unstakeToTokenFromPool(TradeInfo calldata info) external returns (uint256 amountOut);\n\n\n    /********* DT ************/ \n\n    /** @dev stakes given DT into given datapool\n     */\n    function stakeDTInPool(TradeInfo calldata info) external payable  returns (uint256 poolAmountOut);\n\n    /** @dev unstakes staked pool tokens into given DT from given datapool\n     */\n    function unstakeDTFromPool(TradeInfo calldata info) external returns (uint256 amountOut);\n\n\n\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/interfaces/IStakeRouter.sol": {
        "IStakeRouter": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address[5]",
                      "name": "meta",
                      "type": "address[5]"
                    },
                    {
                      "internalType": "uint256[3]",
                      "name": "uints",
                      "type": "uint256[3]"
                    },
                    {
                      "internalType": "address[]",
                      "name": "path",
                      "type": "address[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "isFRE",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangeId",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct IStakeRouter.TradeInfo",
                  "name": "info",
                  "type": "tuple"
                }
              ],
              "name": "stakeDTInPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address[5]",
                      "name": "meta",
                      "type": "address[5]"
                    },
                    {
                      "internalType": "uint256[3]",
                      "name": "uints",
                      "type": "uint256[3]"
                    },
                    {
                      "internalType": "address[]",
                      "name": "path",
                      "type": "address[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "isFRE",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangeId",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct IStakeRouter.TradeInfo",
                  "name": "info",
                  "type": "tuple"
                }
              ],
              "name": "stakeETHInPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address[5]",
                      "name": "meta",
                      "type": "address[5]"
                    },
                    {
                      "internalType": "uint256[3]",
                      "name": "uints",
                      "type": "uint256[3]"
                    },
                    {
                      "internalType": "address[]",
                      "name": "path",
                      "type": "address[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "isFRE",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangeId",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct IStakeRouter.TradeInfo",
                  "name": "info",
                  "type": "tuple"
                }
              ],
              "name": "stakeTokenInPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address[5]",
                      "name": "meta",
                      "type": "address[5]"
                    },
                    {
                      "internalType": "uint256[3]",
                      "name": "uints",
                      "type": "uint256[3]"
                    },
                    {
                      "internalType": "address[]",
                      "name": "path",
                      "type": "address[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "isFRE",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangeId",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct IStakeRouter.TradeInfo",
                  "name": "info",
                  "type": "tuple"
                }
              ],
              "name": "unstakeDTFromPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address[5]",
                      "name": "meta",
                      "type": "address[5]"
                    },
                    {
                      "internalType": "uint256[3]",
                      "name": "uints",
                      "type": "uint256[3]"
                    },
                    {
                      "internalType": "address[]",
                      "name": "path",
                      "type": "address[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "isFRE",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangeId",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct IStakeRouter.TradeInfo",
                  "name": "info",
                  "type": "tuple"
                }
              ],
              "name": "unstakeToETHFromPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address[5]",
                      "name": "meta",
                      "type": "address[5]"
                    },
                    {
                      "internalType": "uint256[3]",
                      "name": "uints",
                      "type": "uint256[3]"
                    },
                    {
                      "internalType": "address[]",
                      "name": "path",
                      "type": "address[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "isFRE",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangeId",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct IStakeRouter.TradeInfo",
                  "name": "info",
                  "type": "tuple"
                }
              ],
              "name": "unstakeToTokenFromPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "stakeDTInPool((address[5],uint256[3],address[],bool,bytes32))": "9a1175dd",
              "stakeETHInPool((address[5],uint256[3],address[],bool,bytes32))": "33eae921",
              "stakeTokenInPool((address[5],uint256[3],address[],bool,bytes32))": "609c4cf5",
              "unstakeDTFromPool((address[5],uint256[3],address[],bool,bytes32))": "3606db11",
              "unstakeToETHFromPool((address[5],uint256[3],address[],bool,bytes32))": "4c9179de",
              "unstakeToTokenFromPool((address[5],uint256[3],address[],bool,bytes32))": "fe8d5783"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address[5]\",\"name\":\"meta\",\"type\":\"address[5]\"},{\"internalType\":\"uint256[3]\",\"name\":\"uints\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isFRE\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"exchangeId\",\"type\":\"bytes32\"}],\"internalType\":\"struct IStakeRouter.TradeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"stakeDTInPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[5]\",\"name\":\"meta\",\"type\":\"address[5]\"},{\"internalType\":\"uint256[3]\",\"name\":\"uints\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isFRE\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"exchangeId\",\"type\":\"bytes32\"}],\"internalType\":\"struct IStakeRouter.TradeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"stakeETHInPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[5]\",\"name\":\"meta\",\"type\":\"address[5]\"},{\"internalType\":\"uint256[3]\",\"name\":\"uints\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isFRE\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"exchangeId\",\"type\":\"bytes32\"}],\"internalType\":\"struct IStakeRouter.TradeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"stakeTokenInPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[5]\",\"name\":\"meta\",\"type\":\"address[5]\"},{\"internalType\":\"uint256[3]\",\"name\":\"uints\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isFRE\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"exchangeId\",\"type\":\"bytes32\"}],\"internalType\":\"struct IStakeRouter.TradeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"unstakeDTFromPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[5]\",\"name\":\"meta\",\"type\":\"address[5]\"},{\"internalType\":\"uint256[3]\",\"name\":\"uints\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isFRE\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"exchangeId\",\"type\":\"bytes32\"}],\"internalType\":\"struct IStakeRouter.TradeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"unstakeToETHFromPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[5]\",\"name\":\"meta\",\"type\":\"address[5]\"},{\"internalType\":\"uint256[3]\",\"name\":\"uints\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isFRE\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"exchangeId\",\"type\":\"bytes32\"}],\"internalType\":\"struct IStakeRouter.TradeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"unstakeToTokenFromPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"stakeDTInPool((address[5],uint256[3],address[],bool,bytes32))\":{\"details\":\"stakes given DT into given datapool\"},\"stakeETHInPool((address[5],uint256[3],address[],bool,bytes32))\":{\"details\":\"stakes ETH (native token) into datapool\"},\"stakeTokenInPool((address[5],uint256[3],address[],bool,bytes32))\":{\"details\":\"stakes given Erc20 token into datapool\"},\"unstakeDTFromPool((address[5],uint256[3],address[],bool,bytes32))\":{\"details\":\"unstakes staked pool tokens into given DT from given datapool\"},\"unstakeToETHFromPool((address[5],uint256[3],address[],bool,bytes32))\":{\"details\":\"unstakes staked pool tokens into ETH from datapool\"},\"unstakeToTokenFromPool((address[5],uint256[3],address[],bool,bytes32))\":{\"details\":\"unstakes staked pool tokens into given Erc20 from datapool\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\": interface to stake any erc20 token in datapools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakeRouter.sol\":\"IStakeRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakeRouter.sol\":{\"keccak256\":\"0x2b9f1e8659dec9053e05c658aedc31d357b0bbd358d1636b82dab1d6039cd0e4\",\"license\":\"BSU-1.1\",\"urls\":[\"bzz-raw://513fe3956bf9781d64bb6ebef515b645fa98cb016d311db8f118895b350b7240\",\"dweb:/ipfs/QmSjacCz6KAZWVdaSReDnC7w6rzbq9hPd4nJ1wA85riiEN\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/interfaces/IStakeRouter.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IStakeRouter.sol",
          "exportedSymbols": {
            "IStakeRouter": [
              73
            ]
          },
          "id": 74,
          "license": "BSU-1.1",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".0",
                "<",
                "0.9",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:32:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IStakeRouter",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "70:65:0",
                "text": "@notice : interface to stake any erc20 token in datapools"
              },
              "fullyImplemented": false,
              "id": 73,
              "linearizedBaseContracts": [
                73
              ],
              "name": "IStakeRouter",
              "nameLocation": "146:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IStakeRouter.TradeInfo",
                  "id": 18,
                  "members": [
                    {
                      "constant": false,
                      "id": 6,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "232:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "221:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                        "typeString": "address[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "221:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5,
                        "length": {
                          "hexValue": "35",
                          "id": 4,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "229:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "221:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                          "typeString": "address[5]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10,
                      "mutability": "mutable",
                      "name": "uints",
                      "nameLocation": "311:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "300:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                        "typeString": "uint256[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "300:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9,
                        "length": {
                          "hexValue": "33",
                          "id": 8,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "308:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "300:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                          "typeString": "uint256[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 13,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "466:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "456:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "456:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 12,
                        "nodeType": "ArrayTypeName",
                        "src": "456:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15,
                      "mutability": "mutable",
                      "name": "isFRE",
                      "nameLocation": "485:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "480:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 14,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "480:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17,
                      "mutability": "mutable",
                      "name": "exchangeId",
                      "nameLocation": "508:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "500:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 16,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "500:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "TradeInfo",
                  "nameLocation": "201:9:0",
                  "nodeType": "StructDefinition",
                  "scope": 73,
                  "src": "194:331:0",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 19,
                    "nodeType": "StructuredDocumentation",
                    "src": "531:56:0",
                    "text": "@dev stakes ETH (native token) into datapool"
                  },
                  "functionSelector": "33eae921",
                  "id": 27,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeETHInPool",
                  "nameLocation": "601:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "info",
                        "nameLocation": "635:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "616:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeInfo_$18_calldata_ptr",
                          "typeString": "struct IStakeRouter.TradeInfo"
                        },
                        "typeName": {
                          "id": 21,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 20,
                            "name": "TradeInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 18,
                            "src": "616:9:0"
                          },
                          "referencedDeclaration": 18,
                          "src": "616:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInfo_$18_storage_ptr",
                            "typeString": "struct IStakeRouter.TradeInfo"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "615:25:0"
                  },
                  "returnParameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "poolAmountOut",
                        "nameLocation": "676:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "668:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "667:23:0"
                  },
                  "scope": 73,
                  "src": "592:99:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 28,
                    "nodeType": "StructuredDocumentation",
                    "src": "697:67:0",
                    "text": "@dev unstakes staked pool tokens into ETH from datapool"
                  },
                  "functionSelector": "4c9179de",
                  "id": 36,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unstakeToETHFromPool",
                  "nameLocation": "778:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "info",
                        "nameLocation": "818:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "799:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeInfo_$18_calldata_ptr",
                          "typeString": "struct IStakeRouter.TradeInfo"
                        },
                        "typeName": {
                          "id": 30,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29,
                            "name": "TradeInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 18,
                            "src": "799:9:0"
                          },
                          "referencedDeclaration": 18,
                          "src": "799:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInfo_$18_storage_ptr",
                            "typeString": "struct IStakeRouter.TradeInfo"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "798:25:0"
                  },
                  "returnParameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "850:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "842:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "842:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "841:19:0"
                  },
                  "scope": 73,
                  "src": "769:92:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 37,
                    "nodeType": "StructuredDocumentation",
                    "src": "902:55:0",
                    "text": "@dev stakes given Erc20 token into datapool"
                  },
                  "functionSelector": "609c4cf5",
                  "id": 45,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeTokenInPool",
                  "nameLocation": "971:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "info",
                        "nameLocation": "1007:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "988:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeInfo_$18_calldata_ptr",
                          "typeString": "struct IStakeRouter.TradeInfo"
                        },
                        "typeName": {
                          "id": 39,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 38,
                            "name": "TradeInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 18,
                            "src": "988:9:0"
                          },
                          "referencedDeclaration": 18,
                          "src": "988:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInfo_$18_storage_ptr",
                            "typeString": "struct IStakeRouter.TradeInfo"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "987:25:0"
                  },
                  "returnParameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "poolAmountOut",
                        "nameLocation": "1048:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "1040:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1040:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1039:23:0"
                  },
                  "scope": 73,
                  "src": "962:101:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 46,
                    "nodeType": "StructuredDocumentation",
                    "src": "1069:75:0",
                    "text": "@dev unstakes staked pool tokens into given Erc20 from datapool"
                  },
                  "functionSelector": "fe8d5783",
                  "id": 54,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unstakeToTokenFromPool",
                  "nameLocation": "1158:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "info",
                        "nameLocation": "1200:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1181:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeInfo_$18_calldata_ptr",
                          "typeString": "struct IStakeRouter.TradeInfo"
                        },
                        "typeName": {
                          "id": 48,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47,
                            "name": "TradeInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 18,
                            "src": "1181:9:0"
                          },
                          "referencedDeclaration": 18,
                          "src": "1181:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInfo_$18_storage_ptr",
                            "typeString": "struct IStakeRouter.TradeInfo"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1180:25:0"
                  },
                  "returnParameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "1232:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1224:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1224:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1223:19:0"
                  },
                  "scope": 73,
                  "src": "1149:94:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "1284:52:0",
                    "text": "@dev stakes given DT into given datapool"
                  },
                  "functionSelector": "9a1175dd",
                  "id": 63,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeDTInPool",
                  "nameLocation": "1350:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "info",
                        "nameLocation": "1383:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "1364:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeInfo_$18_calldata_ptr",
                          "typeString": "struct IStakeRouter.TradeInfo"
                        },
                        "typeName": {
                          "id": 57,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 56,
                            "name": "TradeInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 18,
                            "src": "1364:9:0"
                          },
                          "referencedDeclaration": 18,
                          "src": "1364:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInfo_$18_storage_ptr",
                            "typeString": "struct IStakeRouter.TradeInfo"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1363:25:0"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "mutability": "mutable",
                        "name": "poolAmountOut",
                        "nameLocation": "1424:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "1416:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1416:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1415:23:0"
                  },
                  "scope": 73,
                  "src": "1341:98:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 64,
                    "nodeType": "StructuredDocumentation",
                    "src": "1445:78:0",
                    "text": "@dev unstakes staked pool tokens into given DT from given datapool"
                  },
                  "functionSelector": "3606db11",
                  "id": 72,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unstakeDTFromPool",
                  "nameLocation": "1537:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "info",
                        "nameLocation": "1574:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 72,
                        "src": "1555:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeInfo_$18_calldata_ptr",
                          "typeString": "struct IStakeRouter.TradeInfo"
                        },
                        "typeName": {
                          "id": 66,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 65,
                            "name": "TradeInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 18,
                            "src": "1555:9:0"
                          },
                          "referencedDeclaration": 18,
                          "src": "1555:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInfo_$18_storage_ptr",
                            "typeString": "struct IStakeRouter.TradeInfo"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1554:25:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "1606:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 72,
                        "src": "1598:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1598:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1597:19:0"
                  },
                  "scope": 73,
                  "src": "1528:89:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 74,
              "src": "136:1486:0",
              "usedErrors": []
            }
          ],
          "src": "0:1623:0"
        },
        "id": 0
      }
    }
  }
}
